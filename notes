<<<<<<< HEAD
int main(int argc, char **argv)
{
      if (argc > 1){
            for(int i=0;i<argc;i++)
                  printf("value of argv[%d] = %s\n\n",i,argv[i]);
                  yyin=fopen(argv[1],"r");
      }
      else
            yyin=stdin;
      yyparse();
      return 0;
}
=======
>>>>>>> 6b2ff188baa52ed9e53f6d2ebe404f625e89e7c5

prog:
   { /* for empty put % empty */}
| statements {
	printf("prog accepted:\n");YYACCEPT;
}
;

statements  : statement { }
            | statements NEWLINE statement { }
            | statements NEWLINE { }
            ;


statement   : if_stmt { }
            | while_stmt { }
            | for_stmt { }
            | function { }
            | function_call { }
            | assignment { }
            | class { }
            | try_except_stmt { }
            | match_stmt { }
            | with_statement { }
            ;


argp  : ID { }
      | NUMBER { }
      | STRING { }
      ;





block //: NEWLINE INDENT stmts NEWLINE DEDENT { }
      : NEWLINE INDENT stmts DEDENT { }
;

stmts : stmt
      | stmts stmt
;

stmt  : simple_stmt NEWLINE {}
      | compound_stmt {}
;


simple_stmt
      : assignment      {}
      //| return_stmt     {}
      //| BREAK           {}
      //| CONTINUE        {}
      //| yield_stmt      {}
      //| global_stmt     {}
      //| nonlocal_stmt   {}
      | function_call   {}
;

compound_stmt
      : if_stmt    {}
      | while_stmt {}
      | for_stmt   {}
      //| function   {}
      | try_except_stmt {}
      | with_statement {}
      | match_stmt {}
;
